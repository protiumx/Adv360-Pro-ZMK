/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
};

/ {
    behaviors {
        #include "macros.dtsi"
    #include "version.dtsi"

        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };

    combos {
        compatible = "zmk,combos";

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <41 42>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp ESC    &kp N1              &kp N2             &kp N3           &kp N4        &kp N5  &kp EQUAL                                                                         &kp MINUS          &kp N6  &kp N7    &kp N8     &kp N9   &kp N0     &kp DELETE
&kp GRAVE  &kp Q               &kp W              &kp E            &kp R         &kp T   &kp LEFT_BRACKET                                                                  &kp RIGHT_BRACKET  &kp Y   &kp U     &kp I      &kp O    &kp P      &kp BSLH
&kp TAB    &mt LEFT_ALT A      &kp S              &kp D            &kp F         &kp G   &kp SLASH         &kp LCTRL         &kp LEFT_SHIFT      &kp RIGHT_ALT  &kp RCTRL  &kp COLON          &kp H   &kp J     &kp K      &kp L    &kp SEMI   &kp SQT
&kp LSHFT  &kp Z               &kp X              &kp C            &kp V         &kp B                                       &kp HOME            &mo 1                                        &kp N   &kp M     &kp COMMA  &kp DOT  &kp FSLH   &kp RSHFT
&kp LCTRL  &lt 3 C_PLAY_PAUSE  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp LEFT_ALT          &kp SPACE         &kp LEFT_COMMAND  &kp END             &mo 2          &kp ENTER  &kp BACKSPACE              &kp LEFT  &kp DOWN   &kp UP   &kp RIGHT  &none
            >;
        };

        fn {
            bindings = <
&to 0   &kp F1   &kp F2   &kp F3   &none   &none  &kp LC(LG(SPACE))                                       &kp LG(LS(N4))  &none           &none           &none         &none            &none  &kp LC(LG(Q))
&trans  &kp F4   &kp F5   &kp F6   &none   &none  &none                                                   &kp LG(SPACE)   &none           &none           &none         &none            &none  &none
&trans  &kp F7   &kp F8   &kp F9   &none   &none  &none              &none      &none       &none  &none  &none           &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none  &none
&trans  &kp F10  &kp F11  &kp F12  &none   &none                                &trans      &none                         &none           &none           &none         &none            &none  &trans
&trans  &none    &none    &none    &trans         &mkp LCLK          &mkp RCLK  &trans      &none  &none  &none                           &none           &none         &none            &none  &none
            >;
        };

        symbols {
            bindings = <
&to 0   &none           &none            &none             &none                 &none                  &none                                             &kp CARET    &kp KP_DIVIDE    &kp KP_MULTIPLY  &kp KP_PLUS      &kp KP_MINUS  &none   &none
&trans  &kp UNDERSCORE  &kp EXCLAMATION  &kp PLUS          &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &none                                             &kp DOLLAR   &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans        &trans  &trans
&trans  &kp MINUS       &kp COLON        &kp EQUAL         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &none   &trans  &trans      &trans  &trans        &kp PERCENT  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &kp HASH      &trans  &trans
&trans  &kp AMPERSAND   &kp LESS_THAN    &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE                        &trans      &none                              &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &kp KP_COMMA  &trans  &trans
&trans  &trans          &trans           &trans            &trans                                       &trans  &trans  &trans      &none   &kp KP_ENTER  &trans                        &kp KP_NUMBER_0  &kp KP_DOT       &kp KP_EQUAL  &trans  &trans
            >;
        };

        media {
            bindings = <
&to 0  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &none                                                  &none            &none  &none           &none              &none            &none       &none
&none  &none         &none         &none         &none         &none         &bootloader                                            &bootloader      &none  &none           &none              &none            &none       &none
&none  &none         &none         &none         &none         &none         &none        &none  &none      &bt BT_CLR  &none       &kp C_MUTE       &none  &none           &none              &none            &none       &none
&none  &none         &none         &none         &none         &none                             &none      &none                                    &none  &none           &bl BL_DEC         &bl BL_INC       &none       &none
&none  &none         &none         &none         &none                       &none        &none  &none      &none       &bl BL_TOG  &rgb_ug RGB_TOG         &kp C_PREVIOUS  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP  &kp C_NEXT  &none
            >;
        };
    };
};
